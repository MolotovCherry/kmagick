name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-win:
    name: Build Windows
    runs-on: windows-latest

    steps:
      - name: Checkout Android ImageMagick
        uses: actions/checkout@v2
        with:
          repository: cherryleafroad/Android-ImageMagick7

      - name: Checkout KMagick
        uses: actions/checkout@v2
        with:
          path: kmagick-rs

      - name: Get latest release tag
        id: tag
        run: |
          $dir = Get-ChildItem -Directory -Path "ImageMagick-*" | Select-Object -Last 1
          $tag = ($dir | Split-Path -Leaf).Substring(12)
          Write-Host "::set-output name=TAG::$tag"

      - name: Cache ImageMagick Setup
        id: cache-imagemagick
        uses: actions/cache@v2
        with:
          path: app
          key: imagemagick-${{ steps.tag.outputs.TAG }}

      - name: Download ImageMagick Windows DLL release
        if: steps.cache-imagemagick.outputs.cache-hit != 'true'
        uses: carlosperate/download-file-action@v1.0.3
        with:
            file-url: 'https://download.imagemagick.org/ImageMagick/download/binaries/ImageMagick-${{ steps.tag.outputs.TAG }}-Q16-HDRI-x64-dll.exe'
            file-name: 'ImageMagick.exe'

      - name: Fetch latest Innoextract
        if: steps.cache-imagemagick.outputs.cache-hit != 'true'
        uses: i3h/download-release-asset@v1
        with:
          tag: latest
          owner: dscharrer
          repo: innoextract
          file: /innoextract-.*-windows\.zip/
          token: ${{ secrets.GITHUB_TOKEN }}

      # running the installer does not work in the runner
      - name: Install ImageMagick Windows
        if: steps.cache-imagemagick.outputs.cache-hit != 'true'
        run: |
          $inno = Resolve-Path -Path innoextract-*-windows.zip
          Expand-Archive -Path $inno -DestinationPath inno/
          inno/innoextract.exe ImageMagick.exe
    
      - name: Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: |
            ${{ runner.temp }}/llvm
          key: llvm-12

      - name: Install LLVM and Clang # required for bindgen to work, see https://github.com/rust-lang/rust-bindgen/issues/1797
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "12.0"
          directory: ${{ runner.temp }}/llvm
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - name: Set LIBCLANG_PATH
        run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            kmagick-rs/rust/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('kmagick-rs/rust/*.toml', 'kmagick-rs/rust/*/*.toml') }}-build-win

      - name: Build Windows
        working-directory: kmagick-rs/rust
        run: |
          ./build-win.ps1

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-windows
          path: kmagick-rs/rust/target/x86_64-pc-windows-msvc/debug/kmagick.dll


  build-android:
    name: Build Android
    runs-on: windows-latest

    steps:
      - name: Checkout Android ImageMagick
        uses: actions/checkout@v2
        with:
          repository: cherryleafroad/Android-ImageMagick7

      - name: Checkout KMagick
        uses: actions/checkout@v2
        with:
          path: kmagick-rs

      - name: Get latest release tag
        id: tag
        run: |
          $dir = Get-ChildItem -Directory -Path "ImageMagick-*" | Select-Object -Last 1
          $tag = ($dir | Split-Path -Leaf).Substring(12)
          Write-Host "::set-output name=TAG::$tag"
      
      - name: Fetch latest Android shared libs
        uses: i3h/download-release-asset@v1
        with:
          tag: latest
          owner: cherryleafroad
          repo: Android-ImageMagick7
          file: imagemagick-7-android-shared.zip
          path: jniLibs/
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract archives
        run: |
          Expand-Archive -Path jniLibs/imagemagick-7-android-shared.zip -DestinationPath jniLibs/

      - name: Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: |
            ${{ runner.temp }}/llvm
          key: llvm-12

      - name: Install LLVM and Clang # required for bindgen to work, see https://github.com/rust-lang/rust-bindgen/issues/1797
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "12.0"
          directory: ${{ runner.temp }}/llvm
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - name: Get NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r22b

      - name: Fix LLVM NDK Paths
        run: |
          $ndkRoot = Resolve-Path -Path "${{ runner.temp }}/*/android-ndk-r22b"
          echo "ANDROID_NDK_HOME=$ndkRoot" >> $env:GITHUB_ENV
          echo "NDK_HOME=$ndkRoot" >> $env:GITHUB_ENV
          echo "$ndkRoot" >> $env:GITHUB_PATH
          echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
          echo "CLANG_PATH=$ndkRoot\toolchains\llvm\prebuilt\windows-x86_64\bin\clang.exe" >> $env:GITHUB_ENV
          echo "$ndkRoot\toolchains\llvm\prebuilt\windows-x86_64\bin\" >> $env:GITHUB_PATH

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            kmagick-rs/rust/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('kmagick-rs/rust/*.toml', 'kmagick-rs/rust/*/*.toml') }}-build-android

      - name: Build Android
        working-directory: kmagick-rs/rust
        run: |
          ./build-android.ps1

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-android
          path: kmagick-rs/rust/target/aarch64-linux-android/debug/libkmagick.so
